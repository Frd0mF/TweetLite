import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";
import { PostLoadingSkeleton } from "~/components/PostLoadingSkeleton";
import { UserLoadingSkeleton } from "~/components/UserLoadingSkeleton";
import { useState } from "react";

const CreatePostWizard = () => {
  const [input, setInput] = useState<string>("");
  const { user } = useUser();

  const ctx = api.useContext();

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    },
  });
  if (!user) return null;
  return (
    <div className="flex w-full gap-3">
      <Image
        width={56}
        height={56}
        className="h-14 w-14 rounded-full"
        src={user.profileImageUrl}
        alt={`${user.username || ""} profile image`}
      />
      <input
        disabled={isPosting}
        placeholder="What's on your mind?"
        className="grow rounded-md bg-transparent px-2 outline-none"
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <button
        disabled={isPosting}
        className="w-20 text-slate-100 hover:text-slate-300"
        onClick={() => mutate({ content: input })}
      >
        Post
      </button>
    </div>
  );
};

type postWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: postWithUser) => {
  const { post, author } = props;
  if (!post || !author) return null;
  return (
    <div className="flex items-center gap-3 border-b border-slate-500 p-4">
      <Image
        width={56}
        height={56}
        className="h-14 w-14 rounded-full"
        src={author.profileImageUrl}
        alt={`${author.username || ""} profile image`}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 font-semibold text-slate-300">
          <span>{`@${author.username || ""}`}</span>
          <span>Â·</span>
          <span className="font-light">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading: postLoading } = api.posts.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-x-slate-500 md:max-w-2xl">
          <div className="flex border-b border-slate-500 p-4">
            <div className="flex justify-center"></div>
            {!user.isSignedIn && <SignInButton />}
            {!user.isLoaded && <UserLoadingSkeleton />}
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {postLoading && <PostLoadingSkeleton />}
            {data?.map((fullPostData) => (
              <PostView {...fullPostData} key={fullPostData.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
